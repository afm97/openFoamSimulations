/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  6
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      fvSolution;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

solvers
{
    "rho.*"
    {
        solver          diagonal;
    }

    p
    {
        solver          PCG; //GAMG;
        //smoother        symGaussSeidel;
        preconditioner  DIC; 
        tolerance       1e-6;
        relTol          0.01;
    }

    pFinal
    {
        $p;
        //tolerance       1e-6;
        relTol          0;
    }

    "(U|h|k|omega|epsilon)"
    {
        //solver          smoothSolver;
        //smoother        symGaussSeidel;
        solver          PBiCGStab;
        preconditioner  DILU;
        tolerance       1e-6;
        relTol          0.1;
    }

    "(U|h|k|epsilon)Final"
    {
        $U;
    }

    Yi
    {
        solver          PBiCG;
        preconditioner  DILU;
        tolerance       1e-6;
        relTol          0.1;
    }
}


SIMPLE
{
    residualControl
    {
        p               1e-8;
        U               1e-18;
        "(k|omega|epsilon)" 1e-8;
    }
    nNonOrthogonalCorrectors 3;
    pRefCell        0;
    pRefValue       0;

}


PIMPLE
{
    momentumPredictor   yes;
    nOuterCorrectors    3;
    nCorrectors         3;
    nNonOrthogonalCorrectors 0;


    pRefCell        0;
    pRefValue       0;
    
    //maxDeltaT           1e-0;
    //maxCo               0.5;
    //alphaTemp           0.05;
    //alphaY              0.05;

}

potentialFlow
{
    nNonOrthogonalCorrectors 3;
}

relaxationFactors
{
    fields
    {
        p               0.2;
    }
    equations
    {
        U               0.5;
        "(k|omega|epsilon).*" 0.3;
    }
}

// ************************************************************************* //
