/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v2312                                 |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

scale   1;

//----- VERTICIES ------\\

z0 0; z1 0.1;

x0 0; x1 3.5; x2 5; x3 6; xc 6.5; x4 7; x5 8; x6 10; x7 20;

y0 0; yh 0.5; y1 1; y2 3; y3 7;

//------- CELLS --------\\

Nz 1;

Ny1D 14; Ny1U 14; Ny2D 8; Ny2U 8; Ny3D 20; Ny3U 12;

Nx1L 9; Nx1R 45; Nx3T 35; Nx4T 35; Nx2L 20; Nx2R 12; 

NyCD 70; NyCU 32; 
NxCL 50; NxCR 50; 


//------- GRINDING --------\\

Gx3L 0.5; Gx3R 0.5; Gx4L 3; Gx4R 2;
Gx1L 0.3; Gx1R 0.1; Gx2L 1; Gx2R 2.5; 

Gy3D 5; Gy3U 2; 
Gy1D 5 ; Gy1U 0.2; Gy2D 5; Gy2U 0.2;

GxTL 0.5; GxTD 2;

GxCL 2; GxCR 0.5; 
GyCD 2; GyCU 1;

//----------------------\\

vertices
(
    (  $x0  $y0  $z0  )   //#00
    (  $x1  $y0  $z0  )   //#01
    (  $x2  $y0  $z0  )   //#02
    (  $x3  $y0  $z0  )   //#03
    (  $xc  $y0  $z0  )   //#04
    (  $x4  $y0  $z0  )   //#05
    (  $x5  $y0  $z0  )   //#06
    (  $x6  $y0  $z0  )   //#07
    (  $x7  $y0  $z0  )   //#08
    
    (  $x0  $yh  $z0  )   //#09
    (  $x1  $yh  $z0  )   //#10
    (  $x2  $yh  $z0  )   //#11
    (  $x3  $yh  $z0  )   //#12
    (  $xc  $yh  $z0  )   //#13
    (  $x4  $yh  $z0  )   //#14
    (  $x5  $yh  $z0  )   //#15
    (  $x6  $yh  $z0  )   //#16
    (  $x7  $yh  $z0  )   //#17
    
    (  $x0  $y1  $z0  )   //#18
    (  $x1  $y1  $z0  )   //#19
    (  $x2  $y1  $z0  )   //#20
    (  $x3  $y1  $z0  )   //#21
    (  $xc  $y1  $z0  )   //#22
    (  $x4  $y1  $z0  )   //#23
    (  $x5  $y1  $z0  )   //#24
    (  $x6  $y1  $z0  )   //#25
    (  $x7  $y1  $z0  )   //#26
    
    (  $x0  $y2  $z0  )   //#27
    (  $x1  $y2  $z0  )   //#28
    (  $x2  $y2  $z0  )   //#29
    (  $x3  $y2  $z0  )   //#30
    (  $xc  $y2  $z0  )   //#31
    (  $x4  $y2  $z0  )   //#32
    (  $x5  $y2  $z0  )   //#33
    (  $x6  $y2  $z0  )   //#34
    (  $x7  $y2  $z0  )   //#35
    
    (  $x0  $y3  $z0  )   //#36
    (  $x1  $y3  $z0  )   //#37
    (  $x2  $y3  $z0  )   //#38
    (  $x3  $y3  $z0  )   //#39
    (  $xc  $y3  $z0  )   //#40
    (  $x4  $y3  $z0  )   //#41
    (  $x5  $y3  $z0  )   //#42
    (  $x6  $y3  $z0  )   //#43
    (  $x7  $y3  $z0  )   //#44
  
    
    (  $x0  $y0  $z1  )   //#45
    (  $x1  $y0  $z1  )   //#46
    (  $x2  $y0  $z1  )   //#47
    (  $x3  $y0  $z1  )   //#48
    (  $xc  $y0  $z1  )   //#49
    (  $x4  $y0  $z1  )   //#50
    (  $x5  $y0  $z1  )   //#51
    (  $x6  $y0  $z1  )   //#52
    (  $x7  $y0  $z1  )   //#53
    

    (  $x0  $yh  $z1  )   //#54
    (  $x1  $yh  $z1  )   //#55
    (  $x2  $yh  $z1  )   //#56
    (  $x3  $yh  $z1  )   //#57
    (  $xc  $yh  $z1  )   //#58
    (  $x4  $yh  $z1  )   //#59
    (  $x5  $yh  $z1  )   //#60
    (  $x6  $yh  $z1  )   //#61
    (  $x7  $yh  $z1  )   //#62
    
    (  $x0  $y1  $z1  )   //#63
    (  $x1  $y1  $z1  )   //#64
    (  $x2  $y1  $z1  )   //#65
    (  $x3  $y1  $z1  )   //#66
    (  $xc  $y1  $z1  )   //#67
    (  $x4  $y1  $z1  )   //#68
    (  $x5  $y1  $z1  )   //#69
    (  $x6  $y1  $z1  )   //#70
    (  $x7  $y1  $z1  )   //#71
    
    (  $x0  $y2  $z1  )   //#72
    (  $x1  $y2  $z1  )   //#73
    (  $x2  $y2  $z1  )   //#74
    (  $x3  $y2  $z1  )   //#75
    (  $xc  $y2  $z1  )   //#76
    (  $x4  $y2  $z1  )   //#77
    (  $x5  $y2  $z1  )   //#78
    (  $x6  $y2  $z1  )   //#79
    (  $x7  $y2  $z1  )   //#80
    
    (  $x0  $y3  $z1  )   //#81
    (  $x1  $y3  $z1  )   //#82
    (  $x2  $y3  $z1  )   //#83
    (  $x3  $y3  $z1  )   //#84
    (  $xc  $y3  $z1  )   //#85
    (  $x4  $y3  $z1  )   //#86
    (  $x5  $y3  $z1  )   //#87
    (  $x6  $y3  $z1  )   //#88
    (  $x7  $y3  $z1  )   //#89    
   
);

blocks
(   
    hex (  0  1 10  9 45 46 55 54 ) ( $Nx1L $Ny1D $Nz ) simpleGrading ( $Gx1L $Gy1D 1 )
    hex (  1  2 11 10 46 47 56 55 ) ( $Nx1R $Ny1D $Nz ) simpleGrading ( $Gx1R $Gy1D 1 )
    hex (  9 10 19 18 54 55 64 63 ) ( $Nx1L $Ny1U $Nz ) simpleGrading ( $Gx1L $Gy1U 1 )
    hex ( 10 11 20 19 55 56 65 64 ) ( $Nx1R $Ny1U $Nz ) simpleGrading ( $Gx1R $Gy1U 1 )
    
    hex (  3  4 13 12 48 49 58 57 ) ( $NxCL $NyCD $Nz ) simpleGrading ( $GxCL $GyCD 1 )
    hex (  4  5 14 13 49 50 59 58 ) ( $NxCR $NyCD $Nz ) simpleGrading ( $GxCR $GyCD 1 )
    hex ( 12 13 22 21 57 58 67 66 ) ( $NxCL $NyCU $Nz ) simpleGrading ( $GxCL $GyCU 1 ) 
    hex ( 13 14 23 22 58 59 68 67 ) ( $NxCR $NyCU $Nz ) simpleGrading ( $GxCR $GyCU 1 )
    
    hex (  6  7 16 15 51 52 61 60 ) ( $Nx2L $Ny2D $Nz ) simpleGrading ( $Gx2L $Gy2D 1 )
    hex (  7  8 17 16 52 53 62 61 ) ( $Nx2R $Ny2D $Nz ) simpleGrading ( $Gx2R $Gy2D 1 )
    hex ( 15 16 25 24 60 61 70 69 ) ( $Nx2L $Ny2U $Nz ) simpleGrading ( $Gx2L $Gy2U 1 )
    hex ( 16 17 26 25 61 62 71 70 ) ( $Nx2R $Ny2U $Nz ) simpleGrading ( $Gx2R $Gy2U 1 )
    
    hex ( 18 19 28 27 63 64 73 72 ) ( $Nx1L $Ny3D $Nz ) edgeGrading ( $Gx1L $Gx3L $Gx3L $Gx1L $Gy3D $Gy3D $Gy3D $Gy3D 1 1 1 1 )
    hex ( 19 20 29 28 64 65 74 73 ) ( $Nx1R $Ny3D $Nz ) edgeGrading ( $Gx1R $Gx3R $Gx3R $Gx1R $Gy3D $Gy3D $Gy3D $Gy3D 1 1 1 1 )
    hex ( 20 21 30 29 65 66 75 74 ) ( $Nx3T $Ny3D $Nz ) edgeGrading ( $GxTL 1 1 $GxTL $Gy3D $Gy3D $Gy3D $Gy3D 1 1 1 1 )
    hex ( 21 22 31 30 66 67 76 75 ) ( $NxCL $Ny3D $Nz ) edgeGrading ( $GxCL 1 1 $GxCL $Gy3D $Gy3D $Gy3D $Gy3D 1 1 1 1 )
    hex ( 22 23 32 31 67 68 77 76 ) ( $NxCR $Ny3D $Nz ) edgeGrading ( $GxCR 1 1 $GxCR $Gy3D $Gy3D $Gy3D $Gy3D 1 1 1 1 )
    hex ( 23 24 33 32 68 69 78 77 ) ( $Nx4T $Ny3D $Nz ) edgeGrading ( $GxTD 1 1 $GxTD $Gy3D $Gy3D $Gy3D $Gy3D 1 1 1 1 )
    hex ( 24 25 34 33 69 70 79 78 ) ( $Nx2L $Ny3D $Nz ) edgeGrading ( $Gx2L $Gx4L $Gx4L $Gx2L $Gy3D $Gy3D $Gy3D $Gy3D 1 1 1 1 )
    hex ( 25 26 35 34 70 71 80 79 ) ( $Nx2R $Ny3D $Nz ) edgeGrading ( $Gx2R $Gx4R $Gx4R $Gx2R $Gy3D $Gy3D $Gy3D $Gy3D 1 1 1 1 )
    
    hex ( 27 28 37 36 72 73 82 81 ) ( $Nx1L $Ny3U $Nz ) edgeGrading ( $Gx3L 1 1 $Gx3L $Gy3U $Gy3U $Gy3U $Gy3U 1 1 1 1 )
    hex ( 28 29 38 37 73 74 83 82 ) ( $Nx1R $Ny3U $Nz ) edgeGrading ( $Gx3R 1 1 $Gx3R $Gy3U $Gy3U $Gy3U $Gy3U 1 1 1 1 )
    hex ( 29 30 39 38 74 75 84 83 ) ( $Nx3T $Ny3U $Nz ) simpleGrading ( 1 $Gy3U 1 )
    hex ( 30 31 40 39 75 76 85 84 ) ( $NxCL $Ny3U $Nz ) simpleGrading ( 1 $Gy3U 1 )
    hex ( 31 32 41 40 76 77 86 85 ) ( $NxCR $Ny3U $Nz ) simpleGrading ( 1 $Gy3U 1 )
    hex ( 32 33 42 41 77 78 87 86 ) ( $Nx4T $Ny3U $Nz ) simpleGrading ( 1 $Gy3U 1 )
    hex ( 33 34 43 42 78 79 88 87 ) ( $Nx2L $Ny3U $Nz ) edgeGrading ( $Gx4L 1 1 $Gx4L $Gy3U $Gy3U $Gy3U $Gy3U 1 1 1 1 )
    hex ( 34 35 44 43 79 80 89 88 ) ( $Nx2R $Ny3U $Nz ) edgeGrading ( $Gx4R 1 1 $Gx4R $Gy3U $Gy3U $Gy3U $Gy3U 1 1 1 1 )
);

edges
(
);

boundary
(
	
    inlet
    {
        type patch;
        faces
        (
            (  0 45 54  9 )
            (  9 54 63 18 )
            ( 18 63 72 27 )
            ( 27 72 81 36 )
        );
    }
    
    outlet
    {
        type patch;
        faces
        (
            (  8 17 62 53 )
            ( 17 26 71 62 )
            ( 26 35 80 71 )
            ( 35 44 89 80 )
        );
    }
    
    topWall
    {
        type wall;
        faces
        (
            ( 36 81 82 37 )
            ( 37 82 83 38 )
            ( 38 83 84 39 )
            ( 39 84 85 40 )
            ( 40 85 86 41 )
            ( 41 86 87 42 )
            ( 42 87 88 43 )
            ( 43 88 89 44 )
        );
    }
    
    ground
    {
        type wall;
        faces
        (
            (  0  1 46 45 )
            (  1  2 47 46 )
            (  6  7 52 51 )
            (  7  8 53 52 )
            
            (  2 11 56 47 )
            ( 11 20 65 56 )
            (  6 51 60 15 )
            ( 15 60 69 24 )
            
            
            ( 20 21 66 65 )
            ( 23 24 69 68 )
            
            (  3 48 57 12 )
            ( 12 57 66 21 )
            (  3  4 49 48 )
            (  4  5 50 49 )
            (  5 14 59 50 )
            ( 14 23 68 59 )
            
        );
    }

    frontAndBack
    {
        type empty;
        faces
        (
            (  0  9 10  1 )
            (  1 10 11  2 )
            (  9 10 19 18 )
            ( 10 11 20 19 )
            
            (  3 12 13  4 )
            (  4 13 14  5 )
            ( 12 13 22 21 )
            ( 13 14 23 22 )
            
            (  6 15 16 7  )
            (  7 16 17 8  )
            ( 15 24 25 16 )
            ( 16 25 26 17 )
            
            ( 18 27 28 19 )
            ( 19 28 29 20 )
            ( 20 29 30 21 )
            ( 21 30 31 22 )
            ( 22 31 32 23 )
            ( 23 32 33 24 )
            ( 24 33 34 25 )
            ( 25 34 35 26 )
            
            ( 27 36 37 28 )
            ( 28 37 38 29 )
            ( 29 38 39 30 )
            ( 30 39 40 31 )
            ( 31 40 41 32 )
            ( 32 41 42 33 )
            ( 33 42 43 34 )
            ( 34 43 44 35 )
            
            
            ( 45 46 55 54 )
            ( 46 47 56 55 )
            ( 54 55 64 63 )
            ( 55 56 65 64 )
            
            ( 48 49 58 57 )
            ( 49 50 59 58 )
            ( 57 58 67 66 )
            ( 58 59 68 67 )
            
            ( 51 52 61 60 )
            ( 52 53 62 61 )
            ( 60 61 70 69 )
            ( 61 62 71 70 )
            
            ( 63 64 73 72 )
            ( 64 65 74 73 )
            ( 65 66 75 74 )
            ( 66 67 76 75 )
            ( 67 68 77 76 )
            ( 68 69 78 77 )
            ( 69 70 79 78 )
            ( 70 71 80 79 )
            
            ( 72 81 82 73 )
            ( 73 82 83 74 )
            ( 74 83 84 75 )
            ( 75 84 85 76 )
            ( 76 85 86 77 )
            ( 77 86 87 78 )
            ( 78 87 88 79 )
            ( 79 88 89 80 )

        );
    }
);


// ************************************************************************* //
